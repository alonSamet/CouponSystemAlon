{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common/Company.ts","webpack:///./src/app/common/Customer.ts","webpack:///./src/app/components/about/about.component.css","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/companies/companies.component.css","webpack:///./src/app/components/companies/companies.component.html","webpack:///./src/app/components/companies/companies.component.ts","webpack:///./src/app/components/customers/customers.component.css","webpack:///./src/app/components/customers/customers.component.html","webpack:///./src/app/components/customers/customers.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/services/admin-spa.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#logout {\\r\\n    padding-top: 8px;\\r\\n    padding-right: 25px;\\r\\n}\\r\\n\\r\\n#footer {\\r\\n    border-radius: 15px;\\r\\n\\tposition: inherit;\\r\\n\\ttext-align: center;\\r\\n\\tmargin-top: 100px;\\r\\n\\tright: 40%;\\r\\n\\ttop: 40%;\\r\\n\\tbottom: 1px;\\r\\n\\tleft: 40%;\\r\\n\\tpadding: 0.5rem;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<!-- \\r\\n    This component generates the nav bar that allows the access to the other admin SPA components: \\r\\n    Home, Companies, Customers, About & Logout. In addition, it generates the footer of the system, \\r\\n    which contains various ways (Gmail, LinkedIn & Facebook) to contact the system author.\\r\\n-->\\r\\n\\r\\n<nav class=\\\"navbar navbar-default navbar-fixed-top\\\">\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\">\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"navbar-collapse collapse\\\">\\r\\n        <ul class=\\\"nav navbar-nav\\\">\\r\\n\\r\\n            <li>\\r\\n                <a routerLink=\\\"/\\\"> Home\\r\\n                    <span class=\\\"fa fa-home\\\"></span> &nbsp; </a>\\r\\n            </li>\\r\\n            <li>\\r\\n                <a routerLink=\\\"/companies\\\"> Companies\\r\\n                    <span class=\\\"fas fa-chart-line\\\"></span>&nbsp; </a>\\r\\n            </li>\\r\\n            <li>\\r\\n                <a routerLink=\\\"/customers\\\"> Customers\\r\\n                    <span class='fas fa-users'></span>\\r\\n                </a>\\r\\n            </li>\\r\\n            <li>\\r\\n                <a routerLink=\\\"/about\\\"> About\\r\\n                    <span class=\\\"fa fa-info-circle\\\"></span>\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n\\r\\n        <ul id=\\\"logout\\\" class=\\\"nav navbar-nav navbar-right\\\">\\r\\n            <li>\\r\\n                <button (click)=\\\"logout()\\\" class=\\\"btn btn-danger\\\">\\r\\n                    <b>Logout &nbsp; </b>\\r\\n                    <span class=\\\"fas fa-sign-out-alt fa-lg\\\"></span>\\r\\n                </button>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n<div id=\\\"footer\\\" class=\\\"panel panel-info\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n            <span style=\\\"font-size: 18px\\\">\\r\\n                <strong>Contact us:&nbsp; </strong>\\r\\n            </span>\\r\\n            <a class=\\\"btn fab fa-facebook fa-2x\\\" href=\\\"https://www.facebook.com/tamarcovich\\\"></a>\\r\\n            <a class=\\\"btn fab fa-linkedin fa-2x\\\" href=\\\"https://www.linkedin.com/in/alon-samet/\\\"></a>\\r\\n            <a class=\\\"btn fas fa-envelope fa-2x\\\" href=\\\"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=alonkale@gmail.com&shva=1\\\"></a>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            Powered by\\r\\n            <strong>\\r\\n                <i> Alon Samet </i>\\r\\n                <br>\\r\\n            </strong>\\r\\n            <h6> © All Rights Reserved </h6>\\r\\n        </div>\\r\\n        <br>\\r\\n    </div>\"","import { Component } from '@angular/core';\r\nimport { AdminSpaService } from './services/admin-spa.service';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\n/*\r\nThis component generates the nav bar that allows the access to the other admin SPA components: \r\nHome, Companies, Customers, About & Logout. In addition, it generates the footer of the system, \r\nwhich contains various ways (Gmail, LinkedIn & Facebook) to contact the system author.\r\n*/\r\n\r\nexport class AppComponent{\r\n\r\n  \r\n  baseURL: string = \"http://localhost:8080/\";\r\n  request: Request;\r\n  \r\n  constructor(private _adminSpa: AdminSpaService) {\r\n  }\r\n  \r\n  logout() {\r\n    const swalWithBootstrapButtons = swal.mixin({\r\n      confirmButtonClass: 'btn btn-success',\r\n      cancelButtonClass: 'btn btn-danger',\r\n      buttonsStyling: true,\r\n    })\r\n    // sweet alert\r\n    swalWithBootstrapButtons({\r\n      // sweet alert validation message      \r\n      title: 'Are you sure you want to log out of the system?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, log out',\r\n      cancelButtonText: 'Cancel',\r\n      reverseButtons: true\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        // Invalidates the user session\r\n        this._adminSpa.ajaxLogOut(this.request); \r\n        // Sends the user to the login page\r\n        window.location.href = this.baseURL;\r\n      } else if (result.dismiss === swal.DismissReason.cancel) { }\r\n    })\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router'\nimport { AppComponent } from './app.component';\nimport { CompaniesComponent } from './components/companies/companies.component';\nimport { CustomersComponent } from './components/customers/customers.component';\nimport { AdminSpaService } from './services/admin-spa.service';\nimport { AboutComponent } from './components/about/about.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CompaniesComponent,\n    CustomersComponent,\n    AboutComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot (\n      [\n        { \n          path: 'companies',\n          component: CompaniesComponent,\n        },\n        {\n          path: 'customers',\n          component: CustomersComponent,\n        },  \n        {\n          path: 'about',\n          component: AboutComponent,\n        }, \n        {\n          path: '',\n          component: HomeComponent,\n        }, \n\n      ]\n    )\n  ],\n  providers: [AdminSpaService, {provide: LocationStrategy, useClass:HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\r\n// This class generates the company object, which has id, name, password & email\r\n\r\nexport class Company {\r\n    \r\n    constructor   ( public id : number,\r\n                    public name : string, \r\n                    public password : string, \r\n                    public email : string,      ){}\r\n\r\n    setId(id : number) {\r\n        this.id = id;\r\n    }\r\n    setName(name : string) {\r\n        this.name = name;\r\n    }\r\n    setPassword(password : string) {\r\n        this.password = password;\r\n    }\r\n    setEmail(email : string) {\r\n        this.email = email;\r\n    }\r\n\r\n}\r\n","\r\n// This class generates the customer object, which has id, name & password\r\n\r\nexport class Customer {\r\n\r\n    constructor(public id: number,\r\n                public name: string,\r\n                public password: string) { }\r\n\r\n    setId(id: number) {\r\n        this.id = id;\r\n    }\r\n    setName(name: string) {\r\n        this.name = name;\r\n    }\r\n    setPassword(password: string) {\r\n        this.password = password;\r\n    }\r\n\r\n}\r\n","module.exports = \"#container {\\r\\n    padding-bottom: 120px; \\r\\n    width: 90%\\r\\n}\\r\\n\\r\\n#leftimg {\\r\\n    width: 500px;\\r\\n    height: 500px; \\r\\n    border: 3px solid black;\\r\\n}\\r\\n\\r\\n#rightimg {\\r\\n    width: 900px; \\r\\n    height: 500px; \\r\\n    border: 3px solid black;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<br>\\r\\n<br>\\r\\n<br>\\r\\n<br>\\r\\n<br>\\r\\n<br> \\r\\n\\r\\n<!--  \\r\\n    This component displays details about the coupon system project (left image) and the project author (right image) \\r\\n-->\\r\\n\\r\\n<div class=\\\"container\\\" id=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <p>\\r\\n                <img src=\\\"../../../admin/assets/‏‏project.PNG\\\" id=\\\"leftimg\\\">\\r\\n            </p>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <p>\\r\\n                <img src=\\\"../../../admin/assets/alon.PNG\\\" id=\\\"rightimg\\\">\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\n\r\n// This component displays details about the coupon system project and the project author (Alon Samet)\r\n\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"th, td {\\r\\n    text-align: center; \\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n#centerh {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n#centerv {\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n#left {\\r\\n    text-align:left;\\r\\n}\\r\\n\\r\\n#shadow {\\r\\n    text-shadow: -4px 4px 3px #999;\\r\\n}\\r\\n\\r\\n#container {\\r\\n    padding-bottom:120px; \\r\\n    padding-left: 100px; \\r\\n    width: 90%\\r\\n}\\r\\n\\r\\n#create {\\r\\n    padding-bottom:115px; \\r\\n    text-align: center; \\r\\n    background: linear-gradient(rgba(24, 132, 233, 0.2), white);\\r\\n}\\r\\n\\r\\n#get {\\r\\n    padding-bottom:180px; \\r\\n    text-align: center; \\r\\n    background: linear-gradient(rgba(26, 223, 131, 0.356), white);\\r\\n}\\r\\n\\r\\n#update {\\r\\n    padding-bottom:195px; \\r\\n    text-align:center; \\r\\n    background: linear-gradient(rgba(255,152,0,0.2), white);\\r\\n}\\r\\n\\r\\n#getinput {\\r\\n    text-align:center; \\r\\n    width: 220px; \\r\\n    margin-left: 20%\\r\\n}\\r\\n\\r\\n#smtable {\\r\\n    -webkit-padding-after: 50px;\\r\\n            padding-block-end: 50px\\r\\n}\"","module.exports = \"<br>\\r\\n<br>\\r\\n<br>\\r\\n\\r\\n<!--  \\r\\n    This component displays the companies in the system and enables the admin to create \\r\\n    new company, update Existing company & show details of requested company (by its id/name) \\r\\n-->\\r\\n\\r\\n<h3 id=\\\"centerh\\\">\\r\\n    <span class=\\\"label label-success\\\"> All Companies Table </span>\\r\\n</h3>\\r\\n<br>\\r\\n\\r\\n<table border=\\\"1\\\" class=\\\"table table-striped table-bordered\\\">\\r\\n    <tr>\\r\\n        <th> ID </th>\\r\\n        <th> Name </th>\\r\\n        <th> Password </th>\\r\\n        <th> Email </th>\\r\\n        <th> Delete </th>\\r\\n        <th> Edit </th>\\r\\n    </tr>\\r\\n    <!-- Get all companies data into table -->\\r\\n    <tr *ngFor=\\\"let c of companiesList; let i = index\\\">\\r\\n        <td> {{c.id}} </td>\\r\\n        <td> {{c.name}} </td>\\r\\n        <td *ngIf=\\\"showDataOnTable\\\"> {{c.password}} </td>\\r\\n        <td *ngIf=\\\"showDataOnTable\\\"> {{c.email}} </td>\\r\\n        <!-- Delete button column -->\\r\\n        <td>\\r\\n            <button class=\\\"btn btn-danger glyphicon glyphicon-trash\\\" (click)=\\\"removeCompany(i)\\\"> </button>\\r\\n        </td>\\r\\n        <!-- \\\"Edit\\\" button column -->\\r\\n        <td>\\r\\n            <button class=\\\"btn btn-warning far fa-edit\\\" (click)=\\\"showUpdateCompany(i)\\\"> </button>\\r\\n        </td>\\r\\n    </tr>\\r\\n</table>\\r\\n\\r\\n<br>\\r\\n<br>\\r\\n<br>\\r\\n\\r\\n<div class=\\\"container\\\" id=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\" id=\\\"create\\\">\\r\\n            <!-- Create company -->\\r\\n            <br>\\r\\n            <br>\\r\\n            <h2>\\r\\n                <span class=\\\"label label-default\\\"> &nbsp; Create New Company &nbsp;\\r\\n                    <span id=\\\"centerv\\\" class=\\\"fas fa-folder-plus\\\"></span> &nbsp;\\r\\n                </span>\\r\\n            </h2>\\r\\n            <br>\\r\\n            <br>\\r\\n            <br>\\r\\n            <div id=\\\"centerh\\\">\\r\\n                <span>\\r\\n                    <b> Please insert new company details: </b>\\r\\n                </span>\\r\\n                <br>\\r\\n                <br>\\r\\n                <br>\\r\\n\\r\\n                <div id=\\\"left\\\" class=\\\"form-group\\\">\\r\\n                    <label> Name: </label>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"newCompany.name\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter company name\\\">\\r\\n                </div>\\r\\n\\r\\n                <div id=\\\"left\\\" class=\\\"form-group\\\">\\r\\n                    <label id=\\\"left\\\"> Password: </label>\\r\\n                    <input type=\\\"password\\\" [(ngModel)]=\\\"newCompany.password\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter company password\\\">\\r\\n                </div>\\r\\n\\r\\n                <div id=\\\"left\\\" class=\\\"form-group\\\">\\r\\n                    <label id=\\\"left\\\"> Email: </label>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"newCompany.email\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter company email\\\">\\r\\n                </div>\\r\\n                <br>\\r\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"createCompany()\\\">\\r\\n                    <b> Create New Company </b>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Gap between columns -->\\r\\n        <div class=\\\"col-md-1\\\">\\r\\n        </div>\\r\\n\\r\\n        <!-- Get company -->\\r\\n        <div class=\\\"col-md-3\\\" id=\\\"get\\\">\\r\\n            <br>\\r\\n            <br>\\r\\n            <h2>\\r\\n                <span class=\\\"label label-default\\\">&nbsp; Get Company &nbsp;\\r\\n                    <span id=\\\"centerv\\\" class=\\\"far fa-folder-open\\\"></span>&nbsp;\\r\\n                </span>\\r\\n            </h2>\\r\\n            <br>\\r\\n            <br>\\r\\n\\r\\n            <div *ngIf=\\\"showGetButtons\\\" class=\\\"btn-group btn-group-toggle\\\" data-toggle=\\\"buttons\\\" id=\\\"centerh\\\">\\r\\n                <h4>\\r\\n                    <b> Please select one of the options:</b>\\r\\n                </h4>\\r\\n                <br>\\r\\n                <br>\\r\\n                <label class=\\\"btn btn-group active\\\">\\r\\n                    <div id=\\\"centerh\\\">\\r\\n                        <div (click)=\\\"showGetInputById()\\\">\\r\\n                            <input type=\\\"radio\\\">\\r\\n                            <h4>\\r\\n                                <b> Get Company By ID </b>\\r\\n                            </h4>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </label>\\r\\n                <br>\\r\\n                <br>\\r\\n                <br>\\r\\n\\r\\n                <label class=\\\"btn btn-group active\\\">\\r\\n                    <div (click)=\\\"showGetInputByName()\\\">\\r\\n                        <input type=\\\"radio\\\">\\r\\n                        <h4>\\r\\n                            <b> Get Company By Name </b>\\r\\n                        </h4>\\r\\n                    </div>\\r\\n                </label>\\r\\n                <br>\\r\\n                <br>\\r\\n                <br>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"showGetInputByIdBool\\\">\\r\\n                <span>\\r\\n                    <b> Please insert company id: </b>\\r\\n                </span>\\r\\n                <br>\\r\\n                <br>\\r\\n                <input type=\\\"number\\\" id=\\\"getinput\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyToGet.id\\\" size=\\\"25px\\\" placeholder=\\\"Enter company id\\\">\\r\\n                <br>\\r\\n                <br>\\r\\n                <br>\\r\\n                <button class=\\\"btn btn-primary\\\" id=\\\"centerh\\\" (click)=\\\"getCompanyById()\\\">\\r\\n                    <b> Get Company! </b>\\r\\n                </button>\\r\\n                <br>\\r\\n                <br>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"showGetInputByNameBool\\\">\\r\\n                <span>\\r\\n                    <b> Please insert company name: </b>\\r\\n                </span>\\r\\n                <br>\\r\\n                <br>\\r\\n                <input type=\\\"text\\\" size=\\\"20\\\" id=\\\"getinput\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyToGet.name\\\" size=\\\"25px\\\" placeholder=\\\"Enter company name\\\">\\r\\n                <br>\\r\\n                <br>\\r\\n                <br>\\r\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"getCompanyByName()\\\">\\r\\n                    <b> Get Company! </b>\\r\\n                </button>\\r\\n                <br>\\r\\n                <br>\\r\\n            </div>\\r\\n            <br>\\r\\n\\r\\n            <!-- Small table of selected company -->\\r\\n            <table *ngIf=\\\"_adminSpa.showSmallTable\\\" id=\\\"smtable\\\" border=\\\"1\\\" class=\\\"table table-striped table-bordered\\\">\\r\\n                <tr>\\r\\n                    <th>\\r\\n                        <small> ID </small>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <small> Name </small>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <small> Password </small>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <small> Email</small>\\r\\n                    </th>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <small> {{companyToGet.id}} </small>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <small> {{companyToGet.name}} </small>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <small> {{companyToGet.password}} </small>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <small> {{companyToGet.email}} </small>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n            <br>\\r\\n\\r\\n            <!-- Back button -->\\r\\n            <div *ngIf=\\\"showGetDetails\\\" id=\\\"centerh\\\">\\r\\n                <button class=\\\"btn\\\" (click)=\\\"backToGetButtons()\\\">\\r\\n                    <b> Back &nbsp;\\r\\n                        <span class=\\\"glyphicon glyphicon-arrow-left\\\"></span>\\r\\n                    </b>\\r\\n                </button>\\r\\n                <br>\\r\\n            </div>\\r\\n            <br>\\r\\n            <br>\\r\\n            <br>\\r\\n        </div>\\r\\n\\r\\n        <!-- Gap between columns -->\\r\\n        <div class=\\\"col-md-1\\\">\\r\\n        </div>\\r\\n\\r\\n        <!-- Update company -->\\r\\n        <div class=\\\"col-md-3\\\" *ngIf=\\\"showUpdateBool\\\" id=\\\"update\\\">\\r\\n            <br>\\r\\n            <br>\\r\\n            <h2>\\r\\n                <span class=\\\"label label-default\\\"> &nbsp; Update Company &nbsp;\\r\\n                    <span id=\\\"centerv\\\" class=\\\"far fa-edit\\\"></span> &nbsp;\\r\\n                </span>\\r\\n            </h2>\\r\\n            <br>\\r\\n            <br>\\r\\n            <br>\\r\\n\\r\\n            <h4>\\r\\n                <span class=\\\"label label-warning\\\"> Update details of the company \\\"{{updatedCompany.name}}\\\": </span>\\r\\n            </h4>\\r\\n            <br>\\r\\n            <div id=\\\"left\\\" class=\\\"form-group\\\">\\r\\n                <label> Password: </label>\\r\\n                <input type=\\\"password\\\" [(ngModel)]=\\\"updatedCompany.password\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter updated company password\\\">\\r\\n            </div>\\r\\n\\r\\n            <div id=\\\"left\\\" class=\\\"form-group\\\">\\r\\n                <label> Email: </label>\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"updatedCompany.email\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter updated company email\\\">\\r\\n            </div>\\r\\n            <br>\\r\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"updateCompany()\\\">\\r\\n                <b> Update Company </b>\\r\\n            </button>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Company } from '../../common/./Company';\r\nimport { AdminSpaService } from '../../services/admin-spa.service';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-companies',\r\n  templateUrl: './companies.component.html',\r\n  styleUrls: ['./companies.component.css']\r\n})\r\n\r\n/* \r\nThis component displays all the companies in the system and enables the admin to create new company, \r\nupdate Existing company & show details of requested company (by its id/name) \r\n*/\r\n\r\nexport class CompaniesComponent implements OnInit {\r\n  // sweet alert field\r\n  swalWithBootstrapButtons = swal.mixin({\r\n    confirmButtonClass: 'btn btn-success',\r\n    cancelButtonClass: 'btn btn-danger',\r\n    buttonsStyling: true,\r\n  })\r\n\r\n  companiesList: Company[];\r\n  newCompany: Company = new Company(0, \"\", \"\", \"\");\r\n  updatedCompany: Company = new Company(0, \"\", \"\", \"\");\r\n  companyToGet: Company = new Company(0, \"\", \"\", \"\");\r\n\r\n  //ngIf boolean variables:\r\n  showStartImage = false;\r\n  showUpdateBool = false;\r\n  showGetButtons = true;\r\n  showGetInputByIdBool = false;\r\n  showGetInputByNameBool = false;\r\n  showGetDetails = false;\r\n  showTable = false;\r\n  showDataOnTable = true;\r\n  showInputsOnTable = false;\r\n  bool = true;\r\n\r\n  constructor(private _adminSpa: AdminSpaService) {\r\n    this.companiesList = this._adminSpa.companiesList;\r\n    this.companyToGet = this._adminSpa.companyToGet; //now those two companies points on the same object in memory\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._adminSpa.ajaxGetAllCompanies();\r\n  }\r\n\r\n  createCompany(index: number) {\r\n    // sweet alert\r\n\r\n    this.swalWithBootstrapButtons({\r\n      title: 'Create New Company?',\r\n      type: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'Cancel',\r\n      reverseButtons: true\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        // call ajax method in the admin service\r\n        this._adminSpa.ajaxCreateCompany(this.newCompany);\r\n        this.swalWithBootstrapButtons('The new company \"' + this.newCompany.name + '\" was created !')\r\n      } else if (\r\n        result.dismiss === swal.DismissReason.cancel\r\n      ) { }\r\n    })\r\n  }\r\n\r\n  removeCompany(index: number) {\r\n    // sweet alert\r\n    this.swalWithBootstrapButtons({\r\n      title: 'Are you sure you want to delete the company \"' + this.companiesList[index].name + '\" ?',\r\n      text: \"You won't be able to revert this !\",\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete this company',\r\n      cancelButtonText: 'Cancel',\r\n      reverseButtons: true\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        // call ajax method in the admin service\r\n        this._adminSpa.ajaxRemoveCompany(this.companiesList[index]);\r\n        this.swalWithBootstrapButtons('The company \"' + this.companiesList[index].name + '\"  was deleted!')\r\n      } else if (result.dismiss === swal.DismissReason.cancel) { }\r\n    })\r\n  }\r\n\r\n  updateCompany() { // admin cannot update company name\r\n    // sweet alert\r\n    this.swalWithBootstrapButtons({\r\n      title: 'Update details of the company \"' + this.updatedCompany.name + '\" ?',\r\n      type: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'Cancel',\r\n      reverseButtons: true\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        // call ajax method in the admin service\r\n        this._adminSpa.ajaxUpdateCompany(this.updatedCompany);\r\n        this.swalWithBootstrapButtons('The company \"' + this.updatedCompany.name + '\" Was Updated!')\r\n      } else if (result.dismiss === swal.DismissReason.cancel) { }\r\n    })\r\n    this.showDataOnTable = true;\r\n    this.showInputsOnTable = false;\r\n  }\r\n\r\n  getCompanyById() {\r\n    this._adminSpa.ajaxGetCompanyById(this.companyToGet.id)\r\n  }\r\n\r\n  getCompanyByName() {\r\n    this._adminSpa.ajaxGetCompanyByName(this.companyToGet.name);\r\n  }\r\n\r\n  // ****************************************************\r\n  // ************* methods for ngIf tags: ***************\r\n  // ****************************************************\r\n\r\n  showUpdateCompany(i) { // admin cannot update company name\r\n    this.updatedCompany.name = this.companiesList[i].name;\r\n    this.updatedCompany.password = \"\"; // Resets the displayed password when pressing the showUpdate button, so the user can insert its input\r\n    this.updatedCompany.email = \"\"; // Resets the displayed email when pressing the showUpdate button, so the user can insert its input\r\n    this.showUpdateBool = true;\r\n  }\r\n\r\n  showGetInputById() {\r\n    this.showGetButtons = false;\r\n    this.showGetInputByIdBool = true;\r\n    this.showGetDetails = true;\r\n  }\r\n\r\n  showGetInputByName() {\r\n    this.showGetButtons = false;\r\n    this.showGetInputByNameBool = true;\r\n    this.showGetDetails = true;\r\n  }\r\n\r\n  backToGetButtons() {\r\n    this._adminSpa.showSmallTable = false;\r\n    this.showGetInputByNameBool = false;\r\n    this.showGetInputByIdBool = false;\r\n    this.showGetDetails = false;\r\n    this.showGetButtons = true;\r\n    this.showTable = false;\r\n  }\r\n}\r\n","module.exports = \"th, td {\\r\\n    text-align: center; \\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n#centerh {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n#centerv {\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n#left {\\r\\n    text-align:left;\\r\\n}\\r\\n\\r\\n#shadow {\\r\\n    text-shadow: -4px 4px 3px #999;\\r\\n}\\r\\n\\r\\n#container {\\r\\n    padding-bottom:120px; \\r\\n    padding-left: 100px; \\r\\n    width: 90%\\r\\n}\\r\\n\\r\\n#create {\\r\\n    padding-bottom:115px; \\r\\n    text-align: center; \\r\\n    background: linear-gradient(rgba(24, 132, 233, 0.2), white);\\r\\n}\\r\\n\\r\\n#get {\\r\\n    padding-bottom:128px; \\r\\n    text-align: center; \\r\\n    background: linear-gradient(rgba(26, 223, 131, 0.356), white);\\r\\n}\\r\\n\\r\\n#update {\\r\\n    padding-bottom:220px; \\r\\n    text-align:center; \\r\\n    background: linear-gradient(rgba(255,152,0,0.2), white);\\r\\n}\\r\\n\\r\\n#getinput {\\r\\n    text-align:center; \\r\\n    width: 220px; \\r\\n    margin-left: 20%\\r\\n}\\r\\n\\r\\n#smtable {\\r\\n    -webkit-padding-after: 50px;\\r\\n            padding-block-end: 50px\\r\\n}\\r\\n\"","module.exports = \"<br>\\r\\n<br>\\r\\n<br>\\r\\n\\r\\n<!--  \\r\\n    This component displays the customers in the system and enables the admin to create \\r\\n    new customer, update Existing customer & show details of requested customer (by its id/name) \\r\\n-->\\r\\n\\r\\n<h3 id=\\\"centerh\\\">\\r\\n    <span class=\\\"label label-success\\\"> All Customers Table</span>\\r\\n</h3>\\r\\n\\r\\n<br>\\r\\n<table border=\\\"1\\\" class=\\\"table table-striped table-bordered\\\">\\r\\n    <tr>\\r\\n        <th> ID </th>\\r\\n        <th> Name </th>\\r\\n        <th> Password </th>\\r\\n        <th> Delete </th>\\r\\n        <th> Edit </th>\\r\\n    </tr>\\r\\n    <!-- Get all customers data into table -->\\r\\n    <tr *ngFor=\\\"let c of customersList; let i = index\\\">\\r\\n        <td> {{c.id}} </td>\\r\\n        <td> {{c.name}} </td>\\r\\n        <td> {{c.password}} </td>\\r\\n        <td>\\r\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"removeCustomer(i)\\\">\\r\\n                <span class=\\\"glyphicon glyphicon-trash\\\"> </span>\\r\\n            </button>\\r\\n        </td>\\r\\n        <td>\\r\\n            <button class=\\\"btn btn-warning far fa-edit\\\" (click)=\\\"showUpdateCustomer(i)\\\"> </button>\\r\\n        </td>\\r\\n    </tr>\\r\\n</table>\\r\\n\\r\\n<br>\\r\\n<br>\\r\\n<br>\\r\\n\\r\\n<div class=\\\"container\\\" id=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\" id=\\\"create\\\">\\r\\n            <!-- Create customer -->\\r\\n            <br>\\r\\n            <br>\\r\\n            <h2>\\r\\n                <span class=\\\"label label-default\\\"> &nbsp; Create New Customer &nbsp;\\r\\n                    <span id=\\\"centerv\\\" class=\\\"fas fa-user-plus\\\"></span> &nbsp;\\r\\n                </span>\\r\\n            </h2>\\r\\n            <br>\\r\\n            <br>\\r\\n            <br>\\r\\n            <div id=\\\"centerh\\\">\\r\\n                <span>\\r\\n                    <b> Please insert new customer details: </b>\\r\\n                </span>\\r\\n                <br>\\r\\n                <br>\\r\\n                <br>\\r\\n                <div id=\\\"left\\\" class=\\\"form-group\\\">\\r\\n                    <label> Name: </label>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"newCustomer.name\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter customer name\\\">\\r\\n                </div>\\r\\n\\r\\n                <div id=\\\"left\\\" class=\\\"form-group\\\">\\r\\n                    <label> Password: </label>\\r\\n                    <input type=\\\"password\\\" [(ngModel)]=\\\"newCustomer.password\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter customer password\\\">\\r\\n                </div>\\r\\n                <br>\\r\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"createCustomer()\\\" style=\\\"margin-left: 5%\\\">\\r\\n                    <b> Creat New Customer </b>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Gap between columns -->\\r\\n        <div class=\\\"col-md-1\\\">\\r\\n        </div>\\r\\n\\r\\n        <!-- Get customer -->\\r\\n        <div class=\\\"col-md-3\\\" id=\\\"get\\\">\\r\\n            <br>\\r\\n            <br>\\r\\n            <h2>\\r\\n                <span class=\\\"label label-default\\\"> &nbsp; Get Customer &nbsp;\\r\\n                    <span id=\\\"centerv\\\" class=\\\"far fa-folder-open\\\"></span> &nbsp;\\r\\n                </span>\\r\\n            </h2>\\r\\n            <br>\\r\\n            <br>\\r\\n\\r\\n            <div *ngIf=\\\"showGetButtons\\\" class=\\\"btn-group btn-group-toggle\\\" data-toggle=\\\"buttons\\\" id=\\\"centerh\\\">\\r\\n                <h4>\\r\\n                    <b> Please select one of the options:</b>\\r\\n                </h4>\\r\\n                <br>\\r\\n                <br>\\r\\n                <label class=\\\"btn btn-group active\\\">\\r\\n                    <div id=\\\"centerh\\\">\\r\\n                        <div (click)=\\\"showGetInputById()\\\">\\r\\n                            <input type=\\\"radio\\\">\\r\\n                            <h4>\\r\\n                                <b> Get Customer By ID </b>\\r\\n                            </h4>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </label>\\r\\n                <br>\\r\\n                <br>\\r\\n                <br>\\r\\n\\r\\n                <label class=\\\"btn btn-group active\\\">\\r\\n                    <div (click)=\\\"showGetInputByName()\\\">\\r\\n                        <input type=\\\"radio\\\">\\r\\n                        <h4>\\r\\n                            <b> Get Customer By Name </b>\\r\\n                        </h4>\\r\\n                    </div>\\r\\n                </label>\\r\\n                <br>\\r\\n                <br>\\r\\n                <br>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"showGetInputByIdBool\\\">\\r\\n                <span>\\r\\n                    <b> Please insert customer id: </b>\\r\\n                </span>\\r\\n                <br>\\r\\n                <br>\\r\\n                <input type=\\\"number\\\" id=\\\"getinput\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"customerToGet.id\\\"\\r\\n                    size=\\\"25px\\\" name=\\\"idtxt\\\" placeholder=\\\"Enter company id\\\">\\r\\n                <br>\\r\\n                <br>\\r\\n                <button (click)=\\\"getCustomerById()\\\" class=\\\"btn btn-primary\\\" id=\\\"centerh\\\">\\r\\n                    <b> Get Customer! </b>\\r\\n                </button>\\r\\n                <br>\\r\\n                <br>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"showGetInputByNameBool\\\">\\r\\n                <span>\\r\\n                    <b> Please insert customer name: </b>\\r\\n                </span>\\r\\n                <br>\\r\\n                <br>\\r\\n                <input type=\\\"text\\\" id=\\\"getinput\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"customerToGet.name\\\"\\r\\n                    size=\\\"25px\\\" name=\\\"nametxt\\\" placeholder=\\\"Enter company name\\\">\\r\\n                <br>\\r\\n                <br>\\r\\n                <button (click)=\\\"getCustomerByName()\\\" class=\\\"btn btn-primary\\\" id=\\\"centerh\\\">\\r\\n                    <b> Get Customer! </b>\\r\\n                </button>\\r\\n                <br>\\r\\n                <br>\\r\\n            </div>\\r\\n            <br>\\r\\n\\r\\n            <!-- Small table of selected customer -->\\r\\n            <table *ngIf=\\\"_adminSpa.showSmallTable\\\" border=\\\"1\\\" class=\\\"table table-striped table-bordered\\\">\\r\\n                <tr>\\r\\n                    <th> ID </th>\\r\\n                    <th> Name </th>\\r\\n                    <th> Password </th>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td> {{customerToGet.id}} </td>\\r\\n                    <td> {{customerToGet.name}} </td>\\r\\n                    <td> {{customerToGet.password}} </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n\\r\\n            <!-- Back button -->\\r\\n            <div *ngIf=\\\"showGetDetails\\\" id=\\\"centerh\\\">\\r\\n                <br>\\r\\n                <button (click)=\\\"backToGetButtons()\\\" class=\\\"btn\\\">\\r\\n                    <b> Back &nbsp;\\r\\n                        <span class=\\\"glyphicon glyphicon-arrow-left\\\"></span>\\r\\n                    </b>\\r\\n                </button>\\r\\n                <br>\\r\\n            </div>\\r\\n            <br>\\r\\n            <br>\\r\\n            <br>\\r\\n        </div>\\r\\n\\r\\n        <!-- Gap between columns -->\\r\\n        <div class=\\\"col-md-1\\\">\\r\\n        </div>\\r\\n\\r\\n        <!-- Update customer -->\\r\\n        <div class=\\\"col-md-3\\\" *ngIf=\\\"showUpdateBool\\\" id=\\\"update\\\">\\r\\n            <br>\\r\\n            <br>\\r\\n            <h2>\\r\\n                <span class=\\\"label label-default\\\"> &nbsp; Update Customer &nbsp;\\r\\n                    <span id=\\\"centerv\\\" class=\\\"fas fa-user-edit\\\"></span> &nbsp;\\r\\n                </span>\\r\\n            </h2>\\r\\n            <br>\\r\\n            <br>\\r\\n\\r\\n            <h4>\\r\\n                <span class=\\\"label label-warning\\\"> Update details of the customer \\\"{{updatedCustomer.name}}\\\": </span>\\r\\n            </h4>\\r\\n            <br>\\r\\n            <div id=\\\"left\\\" class=\\\"form-group\\\">\\r\\n                <label> Password: </label>\\r\\n                <input type=\\\"password\\\" [(ngModel)]=\\\"updatedCustomer.password\\\" class=\\\"form-control\\\"  placeholder=\\\"Please enter updated customer password\\\">\\r\\n            </div>\\r\\n            <br>\\r\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"updateCustomer()\\\" style=\\\"margin-left:36px\\\">\\r\\n                <b> Update Customer </b>\\r\\n            </button>\\r\\n            <br>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Customer } from '../../common/Customer';\r\nimport { AdminSpaService } from '../../services/admin-spa.service';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  styleUrls: ['./customers.component.css']\r\n})\r\n\r\n/*\r\nThis component displays all the customers in the system and enables the admin to create new customer, \r\nupdate Existing customer & show details of requested customer (by its id/name) \r\n*/\r\n\r\nexport class CustomersComponent implements OnInit {\r\n\r\n  swalWithBootstrapButtons = swal.mixin({\r\n    confirmButtonClass: 'btn btn-success',\r\n    cancelButtonClass: 'btn btn-danger',\r\n    buttonsStyling: true,\r\n  })\r\n\r\n  customersList: Customer[];\r\n  newCustomer: Customer = new Customer(0, \"\", \"\");\r\n  updatedCustomer: Customer = new Customer(0, \"\", \"\");\r\n  customerToGet: Customer = new Customer(0, \"\", \"\");\r\n\r\n  //ngIf boolean variables:\r\n  showStartImage = false;\r\n  showUpdateBool = false;\r\n  showGetButtons = true;\r\n  showGetInputByIdBool = false;\r\n  showGetInputByNameBool = false;\r\n  showGetDetails = false;\r\n  showTable = false;\r\n\r\n\r\n  constructor(private _adminSpa: AdminSpaService) {\r\n    this.customersList = this._adminSpa.customersList;\r\n    this.customerToGet = this._adminSpa.customerToGet; //now those two customers points on the same object in memory\r\n  }\r\n  ngOnInit() {\r\n    this._adminSpa.ajaxGetAllCustomers();\r\n  }\r\n\r\n  createCustomer() {\r\n    // sweet alert\r\n    this.swalWithBootstrapButtons({\r\n      title: 'Create New Customer?',\r\n      type: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'Cancel',\r\n      reverseButtons: true\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        // call ajax method in service\r\n        this._adminSpa.ajaxCreateCustomer(this.newCustomer);\r\n        this.swalWithBootstrapButtons('The new customer \"' + this.newCustomer.name + '\" was created !')\r\n      } else if (\r\n        result.dismiss === swal.DismissReason.cancel\r\n      ) { }\r\n    })\r\n  }\r\n\r\n  removeCustomer(index: number) {\r\n    // sweet alert\r\n    this.swalWithBootstrapButtons({\r\n      title: 'Are you sure you want to delete the customer \"' + this.customersList[index].name + '\" ?',\r\n      text: \"You won't be able to revert this !\",\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete this customer',\r\n      cancelButtonText: 'Cancel',\r\n      reverseButtons: true\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        // call ajax method in service\r\n        this._adminSpa.ajaxRemoveCustomer(this.customersList[index]);\r\n        this.swalWithBootstrapButtons('The customer \"' + this.customersList[index].name + '\"  was deleted!')\r\n      } else if (result.dismiss === swal.DismissReason.cancel) { }\r\n    })\r\n  }\r\n\r\n  updateCustomer() { // admin cannot update customer name \r\n    // sweet alert\r\n    this.swalWithBootstrapButtons({\r\n      title: 'Update details of the customer \"' + this.updatedCustomer.name + '\" ?',\r\n      type: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'Cancel',\r\n      reverseButtons: true\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        // call ajax method in service\r\n        this._adminSpa.ajaxUpdateCustomer(this.updatedCustomer);\r\n        this.swalWithBootstrapButtons('The customer \"' + this.updatedCustomer.name + '\" Was Updated!')\r\n      } else if (\r\n        result.dismiss === swal.DismissReason.cancel\r\n      ) { }\r\n    })\r\n  }\r\n\r\n  getCustomerById() {\r\n    this._adminSpa.ajaxGetCustomerById(this.customerToGet.id);\r\n  }\r\n  getCustomerByName() {\r\n    this._adminSpa.ajaxGetCustomerByName(this.customerToGet.name);\r\n  }\r\n\r\n  // ****************************************************\r\n  // ************* methods for ngIf tags: ***************\r\n  // ****************************************************\r\n\r\n  showUpdateCustomer(i) { // admin cannot update customer name \r\n    this.showUpdateBool = true;\r\n    this.updatedCustomer.name = this.customersList[i].name;\r\n    this.updatedCustomer.password = \"\"; // Resets the displayed password when pressing the showUpdate button, so the user can insert its input\r\n  }\r\n  showGetInputById() {\r\n    this.showGetButtons = false;\r\n    this.showGetInputByIdBool = true;\r\n    this.showGetDetails = true;\r\n  }\r\n  showGetInputByName() {\r\n    this.showGetButtons = false;\r\n    this.showGetInputByNameBool = true;\r\n    this.showGetDetails = true;\r\n  }\r\n  backToGetButtons() {\r\n    this._adminSpa.showSmallTable = false;\r\n    this.showGetInputByNameBool = false;\r\n    this.showGetInputByIdBool = false;\r\n    this.showGetDetails = false;\r\n    this.showGetButtons = true;\r\n    this.showTable = false;\r\n  }\r\n}\r\n","module.exports = \"#welcome {\\r\\n    padding-bottom: 70px;\\r\\n}\\r\\n\\r\\n#shadow {\\r\\n    text-shadow: -4px 4px 3px #999;\\r\\n}\\r\\n\\r\\n#row {\\r\\n    position: relative;\\r\\n    padding-left: 33%; \\r\\n}\\r\\n\\r\\n#img {\\r\\n    position: absolute;\\r\\n    margin-top: 300px;\\r\\n    left: 50%;\\r\\n    top: 50%;\\r\\n    -webkit-transform: translate(-50%,-50%);\\r\\n    transform: translate(-50%,-50%);\\r\\n    width: 1000px; \\r\\n    height: 750px;\\r\\n}\"","module.exports = \"<br>\\r\\n<br>\\r\\n<br>\\r\\n<br>\\r\\n\\r\\n<!--  \\r\\n    This component generates the landing page of the admin SPA. \\r\\n    It contains a basic welcome message and enables the admin to Access all other components\\r\\n-->\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\" id=\\\"welcome\\\">\\r\\n        <h4 id=\\\"shadow\\\">\\r\\n            <b> Hi\\r\\n                <u>\\r\\n                    <i>Admin</i>\\r\\n                </u> , you are logged-in </b>\\r\\n        </h4>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\n/*\r\nThis component generates the landing page of the admin SPA. \r\nIt contains a basic welcome message and enables the admin to Access all other components\r\n*/\r\n\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Company } from '../common/./Company';\r\nimport { Customer } from '../common/./Customer';\r\nimport { Http, RequestOptions } from '@angular/http';\r\nimport swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n// This class is the service of the admin SPA. \r\n// It conatains methods that fires AJAX requests to the server,\r\n// in order to create, update and show companies/customers,\r\n// and logging out of the system. These methods also handles the \r\n// server success/error responses.\r\n\r\nexport class AdminSpaService {\r\n\r\n  baseURL: string = \"http://localhost:8080/\";\r\n\r\n  companiesList: Company[] = new Array<Company>();\r\n  companyToGet: Company = new Company(0, \"\", \"\", \"\");\r\n  customersList: Customer[] = new Array<Customer>();\r\n  customerToGet: Customer = new Customer(0, \"\", \"\");;\r\n  showSmallTable = false;\r\n  request: Request;\r\n\r\n  swalWithBootstrapButtons = swal.mixin({\r\n    confirmButtonClass: 'btn btn-success',\r\n    cancelButtonClass: 'btn btn-danger',\r\n    buttonsStyling: true,\r\n  })\r\n\r\n  constructor(private _http: Http) {\r\n  }\r\n\r\n  //***********************************\r\n  //********* Company methods *********\r\n  //***********************************\r\n\r\n\r\n  ajaxCreateCompany(c: Company) {\r\n    this._http.post(this.baseURL + \"admin/createcompany\", c)\r\n      .subscribe(\r\n        (resp) => {\r\n          this.ajaxGetAllCompanies();\r\n        },\r\n        (err) => {\r\n          if (err.status == 403) {\r\n            window.location.href = this.baseURL;\r\n          } else {\r\n            this.swalWithBootstrapButtons(err._body)\r\n          }\r\n        }\r\n      )\r\n  }\r\n  ajaxRemoveCompany(c: Company) {\r\n    this._http.delete(this.baseURL + \"admin/removecompany\",\r\n      new RequestOptions({ body: c }))\r\n      .subscribe(\r\n        (resp) => {\r\n          this.ajaxGetAllCompanies();\r\n        },\r\n        (err) => {\r\n          if (err.status == 403) {\r\n            window.location.href = this.baseURL;\r\n          } else {\r\n            this.swalWithBootstrapButtons(err._body)\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  ajaxUpdateCompany(c: Company) {\r\n    this._http.put(this.baseURL + \"admin/updatecompany\", c)\r\n      .subscribe(\r\n        (resp) => {\r\n          this.ajaxGetAllCompanies();\r\n        },\r\n        (err) => {\r\n          if (err.status == 403) {\r\n            window.location.href = this.baseURL;\r\n          } else {\r\n            this.swalWithBootstrapButtons(err._body)\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  ajaxGetAllCompanies() {\r\n    this._http.get(this.baseURL + \"admin/getallcompanies\").subscribe(\r\n      (resp) => {\r\n        while (this.companiesList.length > 0)\r\n          this.companiesList.pop();\r\n        let tempList = resp.json();\r\n        for (let item of tempList) {\r\n          this.companiesList.push(item);\r\n        }\r\n      },\r\n      (err) => {\r\n        if (err.status == 403) {\r\n          window.location.href = this.baseURL;\r\n        } else {\r\n          this.swalWithBootstrapButtons(err._body)\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  ajaxGetCompanyById(companyId: number) {\r\n    this._http.get(this.baseURL + \"admin/getcompanybyid/\" + companyId).subscribe(\r\n      (resp) => {\r\n        this.showSmallTable = true;\r\n        let tempCompany = resp.json();\r\n        this.companyToGet.setId(tempCompany.id);\r\n        this.companyToGet.setName(tempCompany.name);\r\n        this.companyToGet.setPassword(tempCompany.password);\r\n        this.companyToGet.setEmail(tempCompany.email);\r\n      },\r\n      (err) => {\r\n        if (err.status == 403) {\r\n          window.location.href = this.baseURL;\r\n        } else {\r\n          this.showSmallTable = false;\r\n          this.swalWithBootstrapButtons(err._body)\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  ajaxGetCompanyByName(companyName: string) {\r\n    this._http.get(this.baseURL + \"admin/getcompanybyname/\" + companyName).subscribe(\r\n      (resp) => {\r\n        this.showSmallTable = true;\r\n        let tempCompany = resp.json();\r\n        this.companyToGet.setId(tempCompany.id);\r\n        this.companyToGet.setName(tempCompany.name);\r\n        this.companyToGet.setPassword(tempCompany.password);\r\n        this.companyToGet.setEmail(tempCompany.email);\r\n      },\r\n      (err) => {\r\n        if (err.status == 403) {\r\n          window.location.href = this.baseURL;\r\n        } else {\r\n          this.showSmallTable = false;\r\n          this.swalWithBootstrapButtons(err._body)\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n\r\n  //***********************************\r\n  //********* Customer methods *********\r\n  //***********************************\r\n\r\n  ajaxCreateCustomer(c: Customer) {\r\n    this._http.post(this.baseURL + \"admin/createcustomer\", c)\r\n      .subscribe(\r\n        (resp) => {\r\n          this.ajaxGetAllCustomers();\r\n        },\r\n        (err) => {\r\n          if (err.status == 403) {\r\n            window.location.href = this.baseURL;\r\n          } else {\r\n            this.swalWithBootstrapButtons(err._body)\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  ajaxRemoveCustomer(c: Customer) {\r\n    this._http.delete(this.baseURL + \"admin/removecustomer\",\r\n      new RequestOptions({ body: c }))\r\n      .subscribe(\r\n        (resp) => {\r\n          this.ajaxGetAllCustomers();\r\n        },\r\n        (err) => {\r\n          if (err.status == 403) {\r\n            window.location.href = this.baseURL;\r\n          } else {\r\n            this.swalWithBootstrapButtons(err._body)\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  ajaxUpdateCustomer(c: Customer) {\r\n    this._http.put(this.baseURL + \"admin/updatecustomer\", c)\r\n      .subscribe(\r\n        (resp) => {\r\n          this.ajaxGetAllCustomers();\r\n        },\r\n        (err) => {\r\n          if (err.status == 403) {\r\n            window.location.href = this.baseURL;\r\n          } else {\r\n            this.swalWithBootstrapButtons(err._body)\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  ajaxGetAllCustomers() {\r\n    this._http.get(this.baseURL + \"admin/getallcustomers\")\r\n      .subscribe(\r\n        (resp) => {\r\n          let tempList = resp.json();\r\n          while (this.customersList.length > 0) {\r\n            this.customersList.pop();\r\n          }\r\n          for (let item of tempList) {\r\n            this.customersList.push(item);\r\n          }\r\n        },\r\n        (err) => {\r\n          if (err.status == 403) {\r\n            window.location.href = this.baseURL;\r\n          } else {\r\n            this.swalWithBootstrapButtons(err._body)\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  ajaxGetCustomerById(customerId: number) {\r\n    this._http.get(this.baseURL + \"admin/getcustomerbyid/\" + customerId).subscribe(\r\n      (resp) => {\r\n        this.showSmallTable = true;\r\n        let tempCustomer = resp.json();\r\n        this.customerToGet.setId(tempCustomer.id);\r\n        this.customerToGet.setName(tempCustomer.name);\r\n        this.customerToGet.setPassword(tempCustomer.password);\r\n      },\r\n      (err) => {\r\n        if (err.status == 403) {\r\n          window.location.href = this.baseURL;\r\n        } else {\r\n          this.showSmallTable = false;\r\n          this.swalWithBootstrapButtons(err._body)\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  ajaxGetCustomerByName(customerName: string) {\r\n    this._http.get(this.baseURL + \"admin/getcustomerbyname/\" + customerName).subscribe(\r\n      (resp) => {\r\n        this.showSmallTable = true;\r\n        let tempCustomer = resp.json();\r\n        this.customerToGet.setId(tempCustomer.id);\r\n        this.customerToGet.setName(tempCustomer.name);\r\n        this.customerToGet.setPassword(tempCustomer.password);\r\n      },\r\n      (err) => {\r\n        if (err.status == 403) {\r\n          window.location.href = this.baseURL;\r\n        } else {\r\n          this.showSmallTable = false;\r\n          this.swalWithBootstrapButtons(err._body)\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  ajaxLogOut(request) {\r\n    this._http.post(this.baseURL + \"admin/logout/\", request).subscribe(\r\n      (resp) => {},\r\n      (err) => {\r\n        if (err.status == 403) {\r\n          window.location.href = this.baseURL;\r\n        } else {\r\n          this.swalWithBootstrapButtons(err._body)\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}